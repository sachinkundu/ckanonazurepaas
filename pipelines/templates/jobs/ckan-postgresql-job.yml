---
parameters:
  - name: environment
    type: string
  - name: postgresHostName
    type: string
    default: "whockandb"
  - name: location
    type: string
    default: "westeurope"
  - name: administratorLogin
    type: string
    default: "ckanpostgresadmin"
  - name: ckanLogin
    type: string
    default: "ckan_default"
  - name: ckanDatabaseName
    type: string
    default: "ckan_default"
  - name: skuTier
    type: string
    default: "GeneralPurpose"
  - name: skuCapacity
    type: number
    default: 4
  - name: skuFamily
    type: string
    default: "Gen5"
  - name: skuName
    type: string
    default: "GP_Gen5_4"
  - name: skuSizeMB
    type: number
    default: 5120
  - name: backupRetentionDays
    type: number
    default: 7
  - name: geoRedundantBackup
    type: string
    default: "Disabled"
  - name: storageAutoGrow
    type: string
    default: "Enabled"
  - name: infrastructureEncryption
    type: string
    default: "Disabled"
  - name: sslEnforcement
    type: string
    default: "Enabled"
  - name: version
    type: string
    default: "11"
  - name: resourceGroup
    type: string
  - name: azureResourceManagerConnection
    type: string
  - name: keyVaultName
    type: string
  - name: virtualNetworkName
    type: string
  - name: subnetName
    type: string
    default: "default"
  - name: logAnalyticsName
    type: string
  - name: diagnosticSettingName
    type: string
  - name: dependsOn
    type: object
    default: []

jobs:
  - deployment: ProvisionPostgreSQLForAzure
    environment: ${{ parameters.environment }}
    dependsOn: ${{ parameters.dependsOn }}
    pool:
      vmImage: "ubuntu-18.04"
    container: postgres:11
    variables:
      - name: ckanLoginPassword
        value: $(POSTGRESPASSWORD)
      - name: administratorLoginPassword
        value: $(POSTGRESADMINPASSWORD)
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: AzureKeyVault@1
              inputs:
                azureSubscription: ${{ parameters.azureResourceManagerConnection }}
                keyVaultName: ${{ parameters.keyVaultName }}
                secretsFilter: "POSTGRESPASSWORD,POSTGRESADMINPASSWORD"
                runAsPreJob: false
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: "Create PostgreSQL"
              inputs:
                deploymentScope: "Resource Group"
                azureResourceManagerConnection: ${{ parameters.azureResourceManagerConnection }}
                action: "Create Or Update Resource Group"
                resourceGroupName: ${{ parameters.resourceGroup }}
                location: ${{ parameters.location }}
                templateLocation: "Linked artifact"
                csmFile: "./arm-templates/ckan_postgres.json"
                overrideParameters: >
                  -serverName ${{ parameters.postgresHostName }}
                  -location ${{ parameters.location }}
                  -skuTier ${{ parameters.skuTier }}
                  -skuCapacity ${{ parameters.skuCapacity }}
                  -skuFamily ${{ parameters.skuFamily }}
                  -skuName ${{ parameters.skuName }}
                  -skuSizeMB ${{ parameters.skuSizeMB }}
                  -backupRetentionDays ${{ parameters.backupRetentionDays }}
                  -geoRedundantBackup ${{ parameters.geoRedundantBackup }}
                  -storageAutoGrow ${{ parameters.storageAutoGrow }}
                  -infrastructureEncryption ${{ parameters.infrastructureEncryption }}
                  -sslEnforcement ${{ parameters.sslEnforcement }}
                  -version ${{ parameters.version }}
                  -administratorLogin ${{ parameters.administratorLogin }}
                  -administratorLoginPassword ${{ variables.administratorLoginPassword }}
                  -virtualNetworkName ${{ parameters.virtualNetworkName }}
                  -subnetName ${{ parameters.subnetName }}
                  -logAnalyticsName ${{ parameters.logAnalyticsName }}
                  -diagnosticSettingName ${{ parameters.diagnosticSettingName }}
                deploymentMode: "Incremental"
            - script: |
                export PGPASSWORD=${{ variables.administratorLoginPassword }}
                export PGUSER=${{ parameters.administratorLogin }}@${{ parameters.postgresHostName }}
                export PGHOST=${{ parameters.postgresHostName }}.postgres.database.azure.com
                echo "Creating user ${{ parameters.ckanLogin }}"
                createuser -S -D -R -w ${{ parameters.ckanLogin }}
                echo "Changing password and granting CREATEDB privilege"
                psql -d postgres --command="ALTER USER ${{ parameters.ckanLogin }} WITH CREATEDB PASSWORD '${{ variables.ckanLoginPassword }}'"
              displayName: Create CKAN user
            - script: |
                export PGPASSWORD=${{ variables.administratorLoginPassword }}
                export PGUSER=${{ parameters.administratorLogin }}@${{ parameters.postgresHostName }}
                export PGHOST=${{ parameters.postgresHostName }}.postgres.database.azure.com
                if [[ $( psql -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='${{ parameters.ckanDatabaseName }}'" ) = '1' ]]; then
                  echo "'${{ parameters.ckanDatabaseName }}' database already exists, doing nothing"
                else
                  export PGPASSWORD=${{ variables.ckanLoginPassword }}
                  export PGUSER=${{ parameters.ckanLogin }}@${{ parameters.postgresHostName }}
                  echo "Creating database '${{ parameters.ckanDatabaseName }}' in the name of '${{ parameters.ckanLogin }}''"
                  createdb -O '${{ parameters.ckanLogin }}' '${{ parameters.ckanDatabaseName }}' -E utf-8
                fi
              displayName: Create CKAN database
